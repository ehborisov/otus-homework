Index: Lib/opcode.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lib/opcode.py	(revision 417f76a20e93044e422fb328a2d8e200fc6df295)
+++ Lib/opcode.py	(revision )
@@ -188,5 +188,6 @@
 EXTENDED_ARG = 145
 def_op('SET_ADD', 146)
 def_op('MAP_ADD', 147)
+def_op('LOAD_OTUS', 148)
 
 del def_op, name_op, jrel_op, jabs_op
Index: Python/ceval.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Python/ceval.c	(revision 417f76a20e93044e422fb328a2d8e200fc6df295)
+++ Python/ceval.c	(revision )
@@ -1232,13 +1232,30 @@
             FAST_DISPATCH();
         }
 
+	TARGET(LOAD_OTUS)
+	{
+	    x = GETLOCAL(0);
+            if (x != NULL) {
+                Py_INCREF(x);
+                PUSH(x);
+		        x = GETITEM(consts, oparg);
+            	Py_INCREF(x);
+            	PUSH(x);
+            	FAST_DISPATCH();
+            }
+            format_exc_check_arg(PyExc_UnboundLocalError,
+                UNBOUNDLOCAL_ERROR_MSG,
+                PyTuple_GetItem(co->co_varnames, 0));
+	    break;
+	}
+
         PREDICTED_WITH_ARG(STORE_FAST);
         TARGET(STORE_FAST)
         {
             v = POP();
             SETLOCAL(oparg, v);
             FAST_DISPATCH();
-        }
+	    }
 
         TARGET_NOARG(POP_TOP)
         {
Index: Include/opcode.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Include/opcode.h	(revision 417f76a20e93044e422fb328a2d8e200fc6df295)
+++ Include/opcode.h	(revision )
@@ -158,7 +158,7 @@
 
 #define SET_ADD         146
 #define MAP_ADD         147
-
+#define LOAD_OTUS 	148
 
 enum cmp_op {PyCmp_LT=Py_LT, PyCmp_LE=Py_LE, PyCmp_EQ=Py_EQ, PyCmp_NE=Py_NE, PyCmp_GT=Py_GT, PyCmp_GE=Py_GE,
 	     PyCmp_IN, PyCmp_NOT_IN, PyCmp_IS, PyCmp_IS_NOT, PyCmp_EXC_MATCH, PyCmp_BAD};
Index: Python/opcode_targets.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Python/opcode_targets.h	(revision 417f76a20e93044e422fb328a2d8e200fc6df295)
+++ Python/opcode_targets.h	(revision )
@@ -147,7 +147,7 @@
     &&TARGET_EXTENDED_ARG,
     &&TARGET_SET_ADD,
     &&TARGET_MAP_ADD,
-    &&_unknown_opcode,
+    &&TARGET_LOAD_OTUS,
     &&_unknown_opcode,
     &&_unknown_opcode,
     &&_unknown_opcode,
Index: Python/peephole.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Python/peephole.c	(revision 417f76a20e93044e422fb328a2d8e200fc6df295)
+++ Python/peephole.c	(revision )
@@ -639,6 +639,13 @@
                 j = addrmap[GETARG(codestr, i) + i + 3] - addrmap[i] - 3;
                 SETARG(codestr, i, j);
                 break;
+	    case LOAD_FAST:
+                if(codestr[i+3] == LOAD_CONST &&
+                   GETARG(codestr, i) == 0) {
+		             codestr[i+3] = LOAD_OTUS;
+		             memset(codestr+i, NOP, 3);
+                }
+                break;
         }
         adj = CODESIZE(opcode);
         while (adj--)
